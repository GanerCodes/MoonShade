#version 330 core
out vec4 FragColor;
in vec3 pos;

uniform sampler2D tex;
uniform      vec2 res;
uniform     float t;

#define V2 vec2
#define V3 vec3
#define V4 vec4
#define V1 float
#define PI 3.14159265359

vec3 rgb2hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}
vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 0.66666, 0.33333, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, p - K.xxx, c.y);
}

V1 sq(V1 x){return x*x;}
V1 min2(V2 v){return min(v.x,v.y);}
V1 max2(V2 v){return max(v.x,v.y);}
V1 min3(V3 v){return min(min(v.x,v.y),v.z);}
V1 max3(V3 v){return max(max(v.x,v.y),v.z);}

V1 pws(V1 x,V1 y) { return sign(x)*pow(abs(x),y); }

V3 star(V2 p, V1 t) {
    p *= 10.0;
    p = V2(5.0*(atan(p.y, p.x))-PI/2,
           ((length(p)-10)/5.0+1.0)*2.5);
    // V1 v = p.y - 0.9*pws(exp(0.9*sin(p.x)), 0.85);
    V1 v = p.y - exp((abs(cos(p.x/2))-abs(sin(p.x/2))));
    return hsv2rgb(V3(mod(t, 1.0), 0.5, clamp(-v*8.0, 0, 1)));
}

void main() {
    V2 p = gl_FragCoord.xy / res;
    p -= V2(.5);
    p *= 2.0;
    
    p*=5.0;
    p += V2(-t,0.0);
    V2 loc = floor(p/2.0+0.5) + V2(3123.0, 1221.0);
    p = mod(p+2.0, 4)-2.0;
    V3 c = V3(0.0);
    V1 sd = mod(2.0*cos(24.0*loc.x)+5.5*sin(31.0*loc.y), 1.0);
    if(sd <= 0.5) {
        p *= 5.0 + 3*sin(49.0*sd);
        p += V2(cos(sd*52.5), sin(sd+200.0));
        V1 d = length(p), a = atan(p.y,p.x)+1.0/sd*2.0*sd*t*sin(2*PI*sd);
        p = d*V2(cos(a-p.y), sin(a+p.x));
        V1 tt = t/5.0 + sd;
        c = star(p, tt) - star(1.4*p, tt);
    }
    
    FragColor = V4(c, 1.0);
}