uniform 𝟚 res;
uniform 𝟙 t;
uniform 𝟛 vp_loc;
uniform 𝟚 vp_ang;

#define MAX_ITERS 128
#define ε 0.0001

𝟛 rot_XY(𝟛 p,𝟙 r) ⇒↪ 𝟛(pˣ⋅􋐳(r)-pʸ⋅􋐲(r),pˣ⋅􋐲(r)+pʸ⋅􋐳(r),pᶻ);
𝟛 rot_XZ(𝟛 p,𝟙 r) ⇒↪ 𝟛(pˣ⋅􋐳(r)-pᶻ⋅􋐲(r),pʸ,pˣ⋅􋐲(r)+pᶻ⋅􋐳(r));
𝟛 rot_YZ(𝟛 p,𝟙 r) ⇒↪ 𝟛(pˣ,pʸ⋅􋐳(r)-pᶻ⋅􋐲(r),pʸ⋅􋐲(r)+pᶻ⋅􋐳(r));
𝟛 rot_XZ_YZ(𝟛 p, 𝟙 r1, 𝟙 r2) ⇒↪ rot_XZ(rot_YZ(p, r1), r2);

𝟛 star(𝟚 p, 𝟙 t, 𝟙 antiblur) ⇒
    p ⋅= 10;
    p = 𝟚(5.0⋅atan(pʸ, pˣ),
           ((length(p)-10)÷5 + 1)⋅2.5);
    𝟙 v = pʸ - 􋐼(1.1⋅(⫰(􋐳(pˣ÷2))-⫰(􋐲(pˣ÷2))));
    ↪ hsv2rgb(𝟛(⸓(2.2⋅t, 1), 0.6, 󷹄(¯v⋅antiblur, 0, 1)));

𝟜 starz(𝟚 p, 𝟙 t, 𝟚 off, 𝟙 antiblur) ⇒
    p += 􋐲(𝟚(401.29, -4.3)⋅off);
    𝟚 loc = ⬓(p÷2 + ½) + off;
    pˣ += 󷰿⋅⫰(􋐳(locʸ))⋅t;
    loc = ⬓(p÷2 + ½) + off;
    p = ⸓(p+2, 4)-2;
    𝟜 c = 𝟜(0);
    𝟙 sd = ⸓(2⋅􋐳(24.0⋅locˣ)+5.5⋅􋐲(31.0⋅locʸ), 1);
    p ⋅= 4 + 􋐲(49.0⋅sd);
    p += 𝟚(􋐳(sd⋅52.5), 􋐲(sd+200));
    ¿(sd ≤ ½) ⇒
        𝟙 d = length(p),
          a = atan(pʸ,pˣ)+½⋅t⋅􋐲(τ⋅sd);
        p = d⋅𝟚(􋐳(a),􋐲(a));
        𝟙 tt = t÷(5+2⋅sd) + 2⋅sd;
        𝟛 c1 = star(p÷(1 + 0.005⋅antiblur), tt, sd+antiblur);
        𝟛 c2 = star((1.1 + ⅒⋅sd)⋅p, tt, sd+antiblur);
        c = 󷹄(𝟜(c1 - c2, length(c1)≥0.99 ⭜(length(c2)≥0.99 ⭜⅘⭝ 1)⭝ 0), 0, 1);
    ¡ ⇒
        𝟙 tt = 󷹄(1-10⋅length(p), 0, 1);
        𝟛 cc = hsv2rgb(𝟛(⤉(sd, ⅕)⋅t + sd, 0.03⋅sd + ⅒, tt));
        c = 𝟜(cc, ⅒⋅length(tt));
    ↪ c;

𝟙 box(𝟛 p, 𝟛 b) ⇒
    𝟛 d = ⫰(p)-b;
    ↪ length(⤉(d,0)) + ⤈(max3(d),0);
𝟙 xor(𝟙 x, 𝟙 y) ⇒↪ ⤉(⤈(x,y),¯⤉(x,y));

𝟙 𝼥(𝟛 p) ⇒
    p = 𝟛(length(pˣᶻ)-1.0, pʸ, 0.0);
    ↪ box(p,𝟛(1));  +⅒⋅􋐳(t)
𝟛 ꬶ(𝟛 p) ⇒↪ normalize(𝟛(𝼥(p+𝟛(ε,0,0)),
                        𝼥(p+𝟛(0,ε,0)),
                        𝼥(p+𝟛(0,0,ε)))-𝼥(p));
𝟜 𝼝(𝟛 p) ⇒↪ 𝟜(1,1,1,1);

𝟜 render(𝟚 𝚙) ⇒
    𝟙 FOV = 125;
    𝟙 cam_dist = 100;
    𝟙 hFOV = FOV⋅􋐴(π⋅FOV÷360);
    𝟛 p_e = 𝟛(hFOV⋅𝚙, ¯cam_dist);

    𝟛 C_s = vp_loc;
    𝟛 C_e = C_s + rot_XZ_YZ(p_e, ¯vp_angʸ, vp_angˣ);
    𝟛 dir = normalize(C_e - C_s);

    𝟛 p = C_s;
    ᖲ invert = 𝼥(p)<0;

    𝟜 𝚌 = 𝟜(0);

    ∀(𝑖 i=0; i<MAX_ITERS; i++) ⇒
        𝟙 d = 𝼥(p);
        ¿(d≤0.001) ⇒
            𝟜 c = 𝼝(p);
            cʳᵍᵇ = (1-i/MAX_ITERS)⋅cʳᵍᵇ⋅½⋅⤉(0, dot(ꬶ(p), -normalize(dir)));
            𝚌 = 𝟜(𝚌ʳᵍᵇ⋅𝚌ᵃ + cʳᵍᵇ⋅(1-𝚌ᵃ)⋅cᵃ, 𝚌ᵃ+(1-𝚌ᵃ)⋅cᵃ);
            ¿(𝚌ᵃ ≥ 0.99) ⇥;
        ¿(d≥1000.0) ⇥;
        p += d⋅dir;
    ↪ 𝚌÷󷹄((length(p-C_s)-1)⋅⅕, 1, 1.1);

ᗜ main() ⇒
    𝟜 𝚌 = render((gl_FragCoordˣʸ - ½⋅res) ÷ min2(res));
    FragColor = 𝟜(𝚌ʳᵍᵇ⋅𝚌ᵃ, 1);
    
     𝟚 p = gl_FragCoord.xy ÷ res;
     𝟚 p = gl_FragCoord.xy ÷ min2(res);
     𝟜 c = 𝟜(0);
     p = (p-½)⋅5;
      𝟙 v = ⤈(box(p,𝟚(1)), length(p-𝟚(¾,¾))-1);
      𝟙 v = xor(box(p,𝟚(1)), length(p-𝟚(¾,¾))-1);
     𝟙 v = ⤉(box(p,𝟚(1)), length(p-𝟚(¾,¾))-1);
     𝟙 H = ⅒;
     𝟙 j = ⸓(v,H);
     cᵇ=.8⋅(j≤½⋅H ⭜smoo(⫰(2⋅(2⋅j/H-½)),8)⭝ 1);
     cʳ=v≤0 ⭜cᵇ⭝ 0;
     ¿(⫰(v)≤¾⋅⅒⋅H) cᵍ=1;
     cʷ=1;
     FragColor = 𝟜(cˣʸᶻ⋅cʷ, 1);
    
     p -= 𝟚(½);
     p ⋅= 8;
     p += 𝟚(-t,5);
     
     𝟜 c = 𝟜(0);
     
     𝟙 c1 = 265÷360; // rgb2hsv(𝟛(0,0,1));
     𝟙 c2 = 290÷360; // rgb2hsv(𝟛(0.6,⅕,1));
     𝟙 D = mix(c1, c2, 󷹄(
                 􋐲(pʸ)⋅􋐳(pˣ)+􋐲(pʸ-½⋅􋐳(⅕⋅t))-⅕⋅􋐳(t)
                 +2⋅􋐳(pˣ+􋐲(pʸ)-􋐳(t-pˣ)⋅pʸ)⋅􋐲(pʸ⋅⅕+􋐳(0.05⋅pʸ+⸓(pˣ,τ)))
                 +􋐳(pʸ-⸓(pˣ,τ)), 0, 1));
     𝟛 d = hsv2rgb(𝟛(D, 1.0, 0.9)) ⋅ 1.0;
     c += 𝟜(d⋅0.025, 0.025);
     
     ∀(𝑖 i = 0; i < 200; i+=󷹄(i÷5,1,4)) {
         𝑖 o = i/3;
         𝟙 s = 0.001 + o÷22.5;
         c += (1-c)⋅(1-cʷ)⋅starz(s⋅p, t, 𝟚(3123⋅i, 25⋅i + 1221 - 35⋅o), 2+o); }
     c += (1-c)⋅𝟜(⅒⋅d,½);
     FragColor = 𝟜(cˣʸᶻ⋅cʷ, 1.0);