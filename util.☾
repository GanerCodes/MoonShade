⨡ glfw
exec("from OpenGL.GL import *")
⨡ OpenGL.GL.shaders
⨡ numpy as np
⮌ time ⨡ time_ns, sleep
global_t0 = time_ns
g_tΔ = 𝚲time_ns-global_t0→÷10⁹

𝘭 = 󰲧xℇ⁻ʷ􋂇ᶻ+y⋅(1-ℇ⁻ʷ􋂇ʸ)

⊢ smart_sleep(Δ):
    𝚡 = time_ns + Δ⋅10⁹
    ¿Δ>⅒: sleep(Δ-⅒)
    ➰time_ns≕t < 𝚡: □
    ↪ t

󱀘 FPS_Tracker:
    ⊢ __init__(𝕊, N=1):
        𝕊ᵗ = 𝕊ᵗ⁰ = g_tΔ
        𝕊ᴺ, 𝕊󰀂, 𝕊󰀅ᴾ󰀒 = N, 0, □
        𝕊
    ⊢ __call__(𝕊):
        𝕊󰀷 = (𝕊ᵗ -ᵜ 𝕊ᵗ≔g_tΔ)
        ¿𝕊󰀅ᴾ󰀒≅□: 𝕊󰀅ᴾ󰀒≔󷷉
        x,Δ,N = 𝕊󰀅ᴾ󰀒,𝕊󰀷,𝕊ᴺ
        𝕊󰀅ᴾ󰀒 = ℇ􍈽󰀷􊽶ᴺ⋅(x-Δ􍨅)+Δ􍨅
         𝕊󰀅ᴾ󰀒 = 1÷((1-𝕊ᴺ 􍨅)⋅(1÷(󷷉⤉𝕊󰀅ᴾ󰀒)) + 𝕊󰀷/𝕊ᴺ)
         𝕊󰀅ᴾ󰀒 = 𝘭(𝕊󰀅ᴾ󰀒,𝕊󰀷 􍨅,𝕊󰀷,1)
         𝕊󰀅ᴾ󰀒 = 𝕊󰀅ᴾ󰀒⋅(1-𝕊󰀷)+1
         𝕊󰀅ᴾ󰀒 = 𝕊󰀷 􍨅
        𝕊󰀂 󷸊+ 1
        𝕊󰁏 = 𝕊ᵗ-𝕊ᵗ⁰
        ↪ 𝕊
    limit = ⥌𝕊,n↦n􍨅-𝕊󰀅ᴾ󰀒 􍨅 ⭢ᣆ􋅂󰂁⁰ smart_sleep
    __str__ = 𝕊↦‹FPS󰂠₌⟦𝕊ᴺ󷸓⟧: ⟦𝕊󰀅ᴾ󰀒▢²⟧›

󱀘 Activator:
    __slots__ = ␛d
    __init__ = ⥌𝕊,d=□↦𝕊ᵈ≔(d≅□⭜{}⭝d)→►□
    ⊢ __call__(𝕊, x, y):
        ¿𝕊ᵈ.get(x,␀)≠y:
            ↪ 𝕊ᵈₓ≔y